buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        // support code generation (android annotaions, dagger, ...)
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
    }
}

apply plugin: 'com.android.application'
apply from: "../build.jacoco-already-instrumented-workaround.gradle"

android {
    compileSdkVersion 21
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "de.nenick.quacc"
        minSdkVersion 17
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            versionNameSuffix "-dev"
            testCoverageEnabled = project.isInstrumentedTestRun
            buildConfigField "String", "MODULE_PATH", "\"$projectDir\"".replace('\\', '\\\\')
        }
    }

    lintOptions {
        // robolectric does only support sdk v21 current
        disable 'OldTargetApi'
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
}

apply from: "build.apt.gradle"
apply from: "../build.androidannotations.gradle"
apply from: "../build.robolectric.gradle"

dependencies {
    // project dependencies
    releaseCompile project(path: ':Core', configuration: 'release')
    debugCompile project(path: ':Core', configuration: 'debug')

    // backward compatibility
    compile 'com.android.support:appcompat-v7:21.0.3'

    // style support
    compile 'com.melnykov:floatingactionbutton:1.2.0'

    // instrumented test support
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.0'
    androidTestCompile 'com.android.support.test.espresso:espresso-contrib:2.0'
    androidTestCompile 'com.android.support.test:testing-support-lib:0.1'

}

afterEvaluate {
    tasks.testDebug {
        testLogging {
            events "passed", "skipped", "failed", "standardOut", "standardError"
        }
        jvmArgs "-XX:MaxPermSize=512m"
    }
}

